분할 정복(Divide and Conquer)

분할 정복은 다중 분기 재귀를 기반으로 하는 알고리즘 디자인 패러다임을 말한다.

분할 정복은 직접 해결할 수 있을 정도로 간단한 문제가 될 때까지 문제를 재귀적으로 
쪼개나간 다음, 그 하위 문제의 결과들을 조합하여 원래 문제의 결과로 만들어 낸다.

대표적인 분할 정복 알고리즘으로는 병합 정렬을 들 수 있다.
병합 정렬은 상단에서 '분할'하고 중앙에서 '정복'하고 하단에서 '조합(Combine)'하는
분할 정복의 도식화를 잘 보여준다.

문제를 축소해서 정복한다는 개념은 고대 그리스의 수학자 유클리드가 문제를 분할해
풀이하는 최대 공약수 알고리즘을 정리했다.

분할 : 문제를 동일한 유형의 여러 하위 문제로 나눈다.
정복 : 가장 작은 단위의 하위 문제를 해결하여 정복한다.
조합 : 하위 문제에 대한 결과를 원래 문제에 대한 결과로 조합한다.

분할 정복은 말 그대로 문제를 '분할'해서 '정복'한 다음 정답을 '조합'해 나간다는
의미를 지닌다.
그리고 재귀를 활용하는 대표적인 알고리즘이다.

분할 정복 수도코드
function F(x):
    if F(x)가 간단 then:
        return F(x)를 계산한 값 // 1: 정복

    else:
        x 를 x1, x2로 분할
        F(x1)과 F(x2)를 호출
        return F(x1),  F(x2)로 F(x)를 구한 값
        // 2: 조합  3: 분할

이 같은 알고리즘 디자인 패러다임은 중급 이상의 코딩 테스트 문제로 빈번히 출제되며
최적 부분 구조(Optimal Substructure)을 풀이하는 매우 중요한 기법 중 하나이므로
잘 숙지해둘 필요가 있다.





            
