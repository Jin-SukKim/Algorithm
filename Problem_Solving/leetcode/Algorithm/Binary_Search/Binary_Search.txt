이진 검색(Binary Search)

이진 검색(Binary Search)이란 정렬된 배열에서 타겟을 찾는 검색 알고리즘이다.

이진 검색은 값을 찾아내는 시간 복잡도가 O(log n)이라는 점에서 대표적인
로그 시간 알고리즘이며, 이진 탐색 트리(BST)와도 유사한 점이 많다.

이진 탐색 트리가 정렬된 구조를 저장하고 탐색하는 자료구조라면,
이진 검색은 정렬된 배열에서 값을 찾아내는 알고리즘 자체를 지칭한다.

이진 검색은 배열의 중간이나 트리의 root에서 시작을 한다.

만약 1~100의 값을 가진 배열이 있고 77을 찾는다면

50 < 77 이므로 왼쪽 포인터를 오른쪽으로 이동한다.

그리고 50 ~ 100의 중간 혹은 root 값인 75와 비교하고 77 > 75이므로 왼쪽 포인터를
오른쪽으로 움직인다.

그 다음 87 > 77이므로 이번엔 오른쪽 포인터를 왼쪽으로 이동한다.

이렇게 범위를 좁혀 나가며 log n번 이내에 검색을 할 수 있게된다.


이진 검색 알고리즘 버그

이진 검색 알고리즘에는 오랫동안 아무도 발견하지 못한 버그가 있었다.

int mid = (left + right) / 2

이 left와 right을 더하고 결과를 반으로 나눠 가운데를 계산하는 방법은 수학적으로
잘못된 점은 전혀 없다.
그러나 컴퓨터과학에서는 문제를 일으킬 수 있는데 두 수를 더하면 항상
각각의 수보다 큰 수가 된지만 자료형에는 최댓값이 있다.(overflow)

만약 left + right가 자료형의 최대값을 초과하면 overflow 에러가 발생한다.

overflow를 방지하기 위해 left + (right - left) / 2 를 계산하면 방지하며
정확한 mid 값을 구할 수 있따.

int mid = left + (right - left) / 2