트리(Tree)는 계층형 트리 구조를 시뮬레이션 하는 추상 자료형(ADT)으로,
루트 값과 부모-자식 관계의 서브트리로 구성되며, 서로 연결된 노드의 집합이다.

트리의 속성 중 하나는 재귀로 정의된(Recursively Defined) 자기 참조(Self-Referential)
자료구조라는 점이다.
쉽게 말해 트리는 자식도 트리고 또 그 자식도 트리다.
흔히 서브트리(Subtrees)로 구성된다고 표현하는데 여러 개의 트리가 쌓아 올려져 
큰 트리가 된다.

트리의 각 명칭

트리는 항상 루트(Root)에서부터 시작된다.

루트는 자식(Child) 노드를 가직고 간선(Edge)로 연결되어 있따.

자식 노드의 개수는 차수(Degree)라고 하며, 크기(Size)는 자신을 포함한
모든 자식 노드의 개수다.

높이(Height)는 현재 위치에서부터 리프(Leaf)까지의 거리,
깊이(Depth)는 루트에서부터 현재 노드까지의 거리다.

레벨(Level)은 0에서부터 시작한다.
경우에 따라 1에서부터 시작하는 경우도 있으나 대부분 논문에서 0에서 시작하는게 일반적이다.
트리는 항상 단방향(Uni-Directional)이기에 간선(Edge)의 화살표는 생략 가능하다.
방향은 위에서 아래로 향한다.


그래프 vs 트리

트리는 순환 구조를 갖지 않는 그래프이다.

트리는 특수한 형태의 그래프의 일종이며, 크게 그래프의 범주에 포함된다.
하지만 트리는 그래프와 달리 한번 연결된 노드가 다시 연결되는 법이 없다.

이외에도 단방햔(Uni-Directional), 양방향(Bi-Directional)을 모두
가리킬 수 있는 그래프와 달리, 트리는 부모 노드에서 자식 노드를 가리키는 단방향이다.

그리고 트리는 하나의 부모 노드를 갖는다는 차이점이 있으며 루트 또한 하나여야 된다.


이진 트리(Binary Tree)

트리 중에서도 가장 널리 사용되는 트리 자료구조는 이진 트리(Binary Tree)와
이진 탐색 트리(Binary Search Tree, BST)다.

먼저, 각 노드가 m개 이하의 자식을 갖고 있으면, m-ary 트리(다항트리, 다진 트리)라고 한다.
여기서 m = 2일 경우, 즉 모든 노드의 차수가 2이하 일 때는 특별히 이진 트리라고 한다.

이진 트리는 왼쪽, 오른쪽, 최대 2개의 자식을 갖는 단순한 형태로,
다진 트리에 비해 훨씬 간결하고 여러 알고리즘을 구현하는 일도 좀 더 간단하게 처리할 수 있어서,
대체로 트리라고하면 대부분 이진 트리를 일컫는다.

이진 트리 유형(Types of Binary Trees)

1) 정 이진 트리(Full Binary Tree) : 
    모든 노드가 0개 또는 2개의 자식 노드를 갖는다.

2) 완전 이진 트리(Complete Binary Tree) : 
    마지막 레벨을 제외하고 모든 레벨이 완전히 채워져 있으며, 
    마지막 레벨의 모든 노드는 가장 왼쪽부터 채워져 있다.

3) 초화 이진 트리(Perfect Binary Tree) :
    모든 노드가 2개의 자식 노드를 갖고 있으며, 모든 리프 노드가
    동일한 깊이 또는 레벨을 갖는다.
