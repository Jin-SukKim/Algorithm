/*
    2. 다트 게임(난이도: 하)
    카카오톡에 뜬 네 번째 별! 심심할 땐? 카카오톡 게임별~

    카카오톡 게임별의 하반기 신규 서비스로 다트 게임을 출시하기로 했다.
    다트 게임은 다트판에 다트를 세 차례 던져 그 점수의 합계로 실력을 겨루는
    게임으로, 모두가 간단히 즐길 수 있다.
    갓 입사한 무지는 코딩 실력을 인정받아 게임의 핵심 부분인 점수 계산 로직을
    맡게 되었다.
    다트 게임의 점수 계산 로직은 아래와 같다.

    1. 다트 게임은 총 3번의 기회로 구성된다.

    2. 각 기회마다 얻을 수 있는 점수는 0점에서 10점까지이다.

    3. 점수와 함께 Single(S), Double(D), Triple(T) 영역이 존재하고 각 영역 당첨 시
        점수에서 1제곱, 2제곱, 3제곱 (점수^1 , 점수^2 , 점수^3 )으로 계산된다.

    4. 옵션으로 스타상(*) , 아차상(#)이 존재하며 스타상(*) 당첨 시 해당 점수와 바로
        전에 얻은 점수를 각 2배로 만든다.
        아차상(#) 당첨 시 해당 점수는 마이너스된다.

    5. 스타상(*)은 첫 번째 기회에서도 나올 수 있다.
        이 경우 첫 번째 스타상(*)의 점수만 2배가 된다. (예제 4번 참고)

    6. 스타상(*)의 효과는 다른 스타상(*)의 효과와 중첩될 수 있다.
        이 경우 중첩된 스타상(*) 점수는 4배가 된다. (예제 4번 참고)

    7. 스타상(*)의 효과는 아차상(#)의 효과와 중첩될 수 있다.
        이 경우 중첩된 아차상(#)의 점수는 -2배가 된다. (예제 5번 참고)

    8. Single(S), Double(D), Triple(T)은 점수마다 하나씩 존재한다.

    9. 스타상(*), 아차상(#)은 점수마다 둘 중 하나만 존재할 수 있으며,
        존재하지 않을 수도 있다.

    0~10의 정수와 문자 S, D, T, *, #로 구성된 문자열이 입력될 시 총점수를
    반환하는 함수를 작성하라.

    입력 형식
        “점수|보너스|[옵션]”으로 이루어진 문자열 3세트.
        예) 1S2D*3T

        점수는 0에서 10 사이의 정수이다.
        보너스는 S, D, T 중 하나이다.
        옵선은 *이나 # 중 하나이며, 없을 수도 있다.
        출력 형식
        3번의 기회에서 얻은 점수 합계에 해당하는 정수값을 출력한다.
        예) 37

    입출력 예제
    예제	dartResult	answer	        설명
    1	    1S2D*3T	    37	    1^1 * 2 + 2^2 * 2 + 3^3
    2	    1D2S#10S	9	    1^2 + 2^1 * (-1) + 10^1
    3	    1D2S0T	    3	    1^2 + 2^1 + 0^3
    4	    1S*2T*3S	23	    1^1 * 2 * 2 + 2^3 * 2 + 3^1
    5	    1D#2S*3S	5	    1^2 * (-1) * 2 + 2^1 * 2 + 3^1
    6	    1T2D3D#	    -4	    1^3 + 2^2 + 3^2 * (-1)
    7	    1D2S3T* 	59	    1^2 + 2^1 * 2 + 3^3 * 2
*/

/* S(Single), Double(D), Triple(T) = 1제곱, 2제곱, 3제곱
    옵션으로 스타상(*), 아차상(#)이 존재 :
        * = 해당 점수와 바로 전에 얻은 점수를 2배로 만든다.
        # = 해당 점수는 마이너스가 된다.
        *이 첫번째에 나온 경우 해당 점수만 2배가 된다.
        그리고 효과가 중첩될 수 있다(중첩된 점수는 4배)
        #과 중첩되는 경우 아차상의 점수가 -2배가 된다.
    S, D, T는 점수마다 하나씩 존재하고
    *와 #은 점수마다 둘 중 하나만 존재할 수 있으며, 존재하지 않을 수도 있다.
*/
#include <string>
#include <cmath>
#include <vector>

// 점수|보너스|[옵션]으로 이루어진 문자열 3세트
// ex) 1S2D*3T = 1^1 * 2 + 2 ^ 2 * 2 + 3 ^ 3 = 37
int dartGame(std::string game)
{
    int result = 0, score = 0, prev = 0;
    bool single = true;
    std::vector<int> nums = {0};

    for (char c : game)
    {
        switch (c)
        {
        case 'S':
            score = std::pow(score, 1);
            single = true;
            break;
        case 'D':
            score = std::pow(score, 2);
            single = true;
            break;
        case 'T':
            score = std::pow(score, 3);
            single = true;
            break;
        case '*':
            score *= 2;
            // 이전 값이 2배가 되나 result에 이미 이전 값이 포함되있으므로 1번더 더해줘 2배로 만든다.
            result += prev; 
            single = true;
            break;
        case '#':
            score *= -1;
            single = true;
            break;
        default:
            // 숫자인 경우 두 자리일 수도 있으니 기존에 이미 수가 들어 있다면
            // 자릿수가 올라간다. 이떄 기존 값에 10을 곱해서 자릿수를 올려준다.
            if (single)
            {
                result += score;
                prev = score;
                score = 0;
                single = false;
            }
            score = score * 10 + c - '0';
            break;
        }
    }

    return result += score;
}

int main()
{
    std::string dartResult = "1T2D3D#";
    dartGame(dartResult);
    return 0;
}