/*
Insertion Sort (삽입 정렬) : 
    - 더이상 앞으로 못 움직일 때까지 element를 적절한 위치로 바꿔준다. 
    앞에 자기 자신의 값보다 작은 수가 없을 떄 까지.
    - 얼맞은 위치로 한번에 바꾼다.
    - if an element is smaller than adjacent elements swap until left element is smaller than the element 
    
    - O(N^2)
*/

ex)
void insertionSort(int arr[], int n) {
    int j, temp;
    for(int i = 0; i < n; i++) {
        j = i;
        while(j >= 0 && arr[j] > arr[j + 1]) {
            temp = arr[j];
            arr[j] = arr[j + 1];
            arr[j + 1] = temp;
            j--;
        }
    }
}

ex2)
/*Function to sort array using insertion sort*/
    void sort(int arr[]) 
    { 
        int n = arr.length; 
        for (int i = 1; i < n; ++i) { 
            int key = arr[i]; 
            int j = i - 1; 
  
            /* Move elements of arr[0..i-1], that are 
               greater than key, to one position ahead 
               of their current position */
            while (j >= 0 && arr[j] > key) { 
                arr[j + 1] = arr[j]; 
                j = j - 1; 
            } 
            arr[j + 1] = key; 
        } 
    } 

ex3)
/* Function to sort an array using insertion sort*/
void insertionSort(int arr[], int n)  
{  
    int i, key, j;  
    for (i = 1; i < n; i++) 
    {  
        key = arr[i];  
        j = i - 1;  
  
        /* Move elements of arr[0..i-1], that are  
        greater than key, to one position ahead  
        of their current position */
        while (j >= 0 && arr[j] > key) 
        {  
            arr[j + 1] = arr[j];  
            j = j - 1;  
        }  
        arr[j + 1] = key;  
    }  
} 